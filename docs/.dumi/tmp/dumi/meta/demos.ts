// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import { demoIndex as dmi4 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/contributing.en-US.md?type=demo-index';
import { demoIndex as dmi5 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/contributing.zh-CN.md?type=demo-index';
import { demoIndex as dmi6 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/introduce.en-US.md?type=demo-index';
import { demoIndex as dmi7 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/introduce.zh-CN.md?type=demo-index';
import { demoIndex as dmi8 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/button/README.md?type=demo-index';
import { demoIndex as dmi9 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/config-provider/index.en-US.md?type=demo-index';
import { demoIndex as dmi10 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/config-provider/index.zh-CN.md?type=demo-index';
import { demoIndex as dmi11 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/my-component/README.md?type=demo-index';
import { demoIndex as dmi12 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/wave/README.md?type=demo-index';
import { demoIndex as dmi13 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/CHANGELOG.zh-CN.md?type=demo-index';
import { demoIndex as dmi14 } from '/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/CHANGELOG.en-US.md?type=demo-index';

export const demoIndexes: Record<string, { ids: string[], getter: () => Promise<any> }> = {
  '_docs/react/contributing.en-US': dmi4,
  '_docs/react/contributing.zh-CN': dmi5,
  '_docs/react/introduce.en-US': dmi6,
  '_docs/react/introduce.zh-CN': dmi7,
  'components/button/README': dmi8,
  'components/config-provider/index.en-US': dmi9,
  'components/config-provider/index.zh-CN': dmi10,
  'components/my-component/README': dmi11,
  'components/wave/README': dmi12,
  'changelog-cn': dmi13,
  'changelog': dmi14,
};

// Convert the demoIndex to a key-value pairs: <demoId, getter>
const demoIdMap = Object.keys(demoIndexes).reduce((total, current) => {
  const demoIndex = demoIndexes[current];
  const { ids, getter } = demoIndex;

  ids.forEach((id) => {
    total[id] = getter;
  });

  return total;
}, {});

/** Async to load demo by id */
export const getDemoById = async (id: string) => {
  const getter = demoIdMap[id];

  if (!getter) {
    return null;
  }

  const { demos }: any = await getter() || {};

  return demos?.[id];
};
