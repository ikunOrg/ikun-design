// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import { tabs } from './tabs';
import { filesFrontmatter } from './frontmatter';

const files = {
  '_docs/react/contributing.en-US': {
    textGetter: () => import(/* webpackChunkName: "meta____en-US" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/contributing.en-US.md?type=text'),
  },
  '_docs/react/contributing.zh-CN': {
    textGetter: () => import(/* webpackChunkName: "meta____zh-CN" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/contributing.zh-CN.md?type=text'),
  },
  '_docs/react/introduce.en-US': {
    textGetter: () => import(/* webpackChunkName: "meta____en-US" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/introduce.en-US.md?type=text'),
  },
  '_docs/react/introduce.zh-CN': {
    textGetter: () => import(/* webpackChunkName: "meta____zh-CN" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/_docs/react/introduce.zh-CN.md?type=text'),
  },
  'components/button/README': {
    textGetter: () => import(/* webpackChunkName: "meta__" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/button/README.md?type=text'),
  },
  'components/config-provider/index.en-US': {
    textGetter: () => import(/* webpackChunkName: "meta____en-US" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/config-provider/index.en-US.md?type=text'),
  },
  'components/config-provider/index.zh-CN': {
    textGetter: () => import(/* webpackChunkName: "meta____zh-CN" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/config-provider/index.zh-CN.md?type=text'),
  },
  'components/my-component/README': {
    textGetter: () => import(/* webpackChunkName: "meta__" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/my-component/README.md?type=text'),
  },
  'components/wave/README': {
    textGetter: () => import(/* webpackChunkName: "meta__" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/packages/core/src/components/wave/README.md?type=text'),
  },
  'changelog-cn': {
    textGetter: () => import(/* webpackChunkName: "meta__CHANGELOG.zh-CN.md__zh-CN" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/CHANGELOG.zh-CN.md?type=text'),
  },
  'changelog': {
    textGetter: () => import(/* webpackChunkName: "meta__CHANGELOG.en-US.md__en-US" */'/Users/liuzhiwei/Desktop/workspeace/git-code/ikun-design/docs/CHANGELOG.en-US.md?type=text'),
  },
};

export const getRouteMetaById = async (id: string) => {
  const file = files[id];

  if (!file) {
    return null;
  }

  const text = await file.textGetter();
  const frontmatter = filesFrontmatter[id];

  const tabsMeta = file.tabs && await Promise.all(file.tabs.map(async (tab) => {
    const meta = await getRouteMetaById(tab) ?? {
      frontmatter: { title: tabs[tab].title },
      toc: [],
      texts: [],
    };
    return {
      ...tabs[tab],
      meta,
    }
  }));

  return {
    texts: text?.texts,
    toc: text?.toc,
    frontmatter,
    tabs: tabsMeta,
  };
}
